<?xml version="1.0"?>
<!--
   - ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Calendar view code.
   -
   - The Initial Developer of the Original Code is
   -   Joey Minta <jminta@gmail.com>
   - Portions created by the Initial Developer are Copyright (C) 2005
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Philipp Kewisch <mozilla@kewis.ch>
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK *****
-->

<!-- Note that this file depends on helper functions in calUtils.js-->

<bindings id="calendar-specific-view-bindings"
    xmlns="http://www.mozilla.org/xbl"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    xmlns:xbl="http://www.mozilla.org/xbl">


   <binding id="calendar-year-view" extends="chrome://calendaryearview/content/calendar-year-view.xml#calendar-year-base-view">
     <implementation implements="calICalendarView">

            <property name="observerID">
                <getter><![CDATA[
                    return "year-view-observer";
                ]]></getter>
            </property>

            <!--Public methods-->
            <method name="goToDay">
                <parameter name="aDate"/>
                <body><![CDATA[
                    this.displayDaysOff = !this.mWorkdaysOnly;

                    aDate = aDate.getInTimezone(this.timezone);
                    aDate.isDate=true;
                    d1=aDate.clone();
                    d1.day=1;
                    d1.month=0;
                    d2=d1.clone();
                    d2.day=31;
                    d2.month=11;

                    this.setDateRange(d1, d2);
                    this.showDate(aDate);
                    this.selectedDay = aDate;
                ]]></body>
            </method>
            <method name="getRangeDescription">
                <body><![CDATA[
                    return this.mRangeStartDate.year;
                 ]]></body>
             </method>
            <method name="moveView">
                <parameter name="aNumber"/>
                <body><![CDATA[
                    let dates = this.getDateList({});
                    this.displayDaysOff = !this.mWorkdaysOnly;

                    if (!aNumber) {
                        let date = now();
                        this.goToDay(date);
                        this.selectedDay = date;
                    } else {
                        // move start date year
                        var d1 = this.startDay.clone();
                        d1.year += aNumber;
                        this.goToDay(d1);


                        // move selected day year
                        /*var savedSelectedDay = this.selectedDay.clone();
                        savedSelectedDay.year += aNumber;
                        ths.selectedDay = savedSelectedDay;*/
                    }
                ]]></body>
            </method>
        </implementation>
    </binding>

</bindings>
